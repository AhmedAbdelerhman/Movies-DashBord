[{"H:\\React projects\\react project\\src\\index.js":"1","H:\\React projects\\react project\\src\\App.js":"2","H:\\React projects\\21-full stack chat app\\react project\\src\\index.js":"3","H:\\React projects\\21-full stack chat app\\react project\\src\\App.js":"4","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\SignUP.js":"5","H:\\React projects\\21-full stack chat app\\react project\\src\\Functions\\httpPostForm.js":"6","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\LogIn.js":"7","H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\Form.js":"8","H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\ChatPage.js":"9","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Chat.js":"10","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Aside.js":"11","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Model.js":"12","H:\\React projects\\21-full stack chat app\\react project\\src\\data\\data.js":"13","H:\\React projects\\21-full stack chat app\\react project\\src\\store\\ChatProvider.js":"14","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Ui\\Skeleton.js":"15","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\index.js":"16","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\App.js":"17","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Form.js":"18","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\MainPage.js":"19","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\LogIn.js":"20","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\SignUP.js":"21","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\Functions\\httpPostForm.js":"22","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\store\\ChatProvider.js":"23","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Profile.js":"24","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\post\\QuoteForm.js":"25","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\Card.js":"26","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\LoadingSpinner.js":"27"},{"size":167,"mtime":1652654198191,"results":"28","hashOfConfig":"29"},{"size":351,"mtime":1652655086304,"results":"30","hashOfConfig":"29"},{"size":339,"mtime":1653173215107,"results":"31","hashOfConfig":"32"},{"size":3166,"mtime":1653346587067,"results":"33","hashOfConfig":"32"},{"size":6510,"mtime":1653298807738,"results":"34","hashOfConfig":"32"},{"size":450,"mtime":1653298855478,"results":"35","hashOfConfig":"32"},{"size":4523,"mtime":1653308369709,"results":"36","hashOfConfig":"32"},{"size":315,"mtime":1653095239391,"results":"37","hashOfConfig":"32"},{"size":471,"mtime":1653158499408,"results":"38","hashOfConfig":"32"},{"size":3484,"mtime":1653173443242,"results":"39","hashOfConfig":"32"},{"size":5184,"mtime":1653386978146,"results":"40","hashOfConfig":"32"},{"size":4383,"mtime":1653348154275,"results":"41","hashOfConfig":"32"},{"size":2007,"mtime":1653127935784,"results":"42","hashOfConfig":"32"},{"size":991,"mtime":1653353559356,"results":"43","hashOfConfig":"32"},{"size":2334,"mtime":1653384819849,"results":"44","hashOfConfig":"32"},{"size":276,"mtime":1660105977915,"results":"45","hashOfConfig":"46"},{"size":1216,"mtime":1660105444641,"results":"47","hashOfConfig":"46"},{"size":277,"mtime":1660082340321,"results":"48","hashOfConfig":"46"},{"size":7929,"mtime":1660144009503,"results":"49","hashOfConfig":"46"},{"size":3936,"mtime":1660139007956,"results":"50","hashOfConfig":"46"},{"size":6299,"mtime":1660138709831,"results":"51","hashOfConfig":"46"},{"size":450,"mtime":1653298855478,"results":"52","hashOfConfig":"46"},{"size":991,"mtime":1654679479568,"results":"53","hashOfConfig":"46"},{"size":4662,"mtime":1660145357986,"results":"54","hashOfConfig":"46"},{"size":4259,"mtime":1660146773100,"results":"55","hashOfConfig":"46"},{"size":156,"mtime":1648226933000,"results":"56","hashOfConfig":"46"},{"size":167,"mtime":1648226933000,"results":"57","hashOfConfig":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"192dlif",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"156zq9d",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"xdav4d",{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"H:\\React projects\\react project\\src\\index.js",[],"H:\\React projects\\react project\\src\\App.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\index.js",[],["123","124"],"H:\\React projects\\21-full stack chat app\\react project\\src\\App.js",["125"],"import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport NightlightIcon from \"@mui/icons-material/Nightlight\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\n\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Alert,\n  Box,\n  IconButton,\n\n  Snackbar,\n  styled,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Form from \"./pages/Form\";\nimport chats from \"./data/data\";\nimport ChatPage from \"./pages/ChatPage\";\nimport { ChatState } from \"./store/ChatProvider\";\n\nfunction App() {\n  //const [chats, setChats] = useState([]);\n  var currentColor = localStorage.getItem(\"displayTheme\") |false;\n  console.log(currentColor);\n\n  currentColor = typeof currentColor == \"number\" ? \"light\" : currentColor;\n\n  const [theme, setTheme] = useState(currentColor);\n\n  localStorage.setItem(\"displayTheme\", theme);\n  const {  snackBar, setSnackBar } = ChatState();\n\n  // useEffect(() => {\n  //   const fetchChats = async () => {\n  //     const response = await fetch(\"http://localhost:8080/api/chat\");\n  //     const { chats } = await response.json();\n  //     return chats;\n  //   };\n\n  //   fetchChats()\n  //     .then((chats) => {\n  //       setChats(chats);\n  //     })\n  //     .catch((e) => console.log(e));\n  // }, [chats]);\n\n  const ThemeTag = styled(\"div\")({\n    position: \"fixed\",\n    top: \"3%\",\n    left: \"3%\",\n  });\n\n  const MyBox = styled(Box)({\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  });\n\n  const displayTheme = createTheme({\n    palette: {\n      mode: theme,\n    },\n  });\n\n  const styles = {\n    position: \"fixed\",\n    display: \"block\",\n    width: \"100% !important\",\n    top: \"0 !important\",\n    justifyContent: \"center\",\n  };\n\n\n  const handleClose  =() =>{\n    setSnackBar({open:false})\n  \n  }\n  return (\n    <ThemeProvider theme={displayTheme}>\n      <Snackbar\n        sx={styles}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={snackBar.open}\n        onClose={handleClose}\n        onClick={handleClose}\n        autoHideDuration={3000}\n      >\n        <Alert severity={snackBar.severity}>{snackBar.message}</Alert>\n      </Snackbar>\n      <MyBox bgcolor=\"background.default\" color={\"text.primary\"}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/home/login\" />\n          </Route>\n          <Route path=\"/home/login\" exact>\n            <Form theme={theme} signUp={false} />\n          </Route>\n          <Route path=\"/home/signup\" exact>\n            <Form theme={theme} signUp={true} />\n          </Route>\n\n          <Route path=\"/chat\">\n            <ChatPage theme={theme} chatArray={chats} />\n          </Route>\n        </Switch>\n        <ThemeTag>\n          <IconButton\n            onClick={() =>\n              theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\")\n            }\n            aria-label=\"\"\n          >\n            {theme === \"light\" ? <NightlightIcon /> : <LightModeIcon />}\n          </IconButton>\n        </ThemeTag>\n      </MyBox>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\SignUP.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\Functions\\httpPostForm.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\LogIn.js",["126"],"import { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport httpPost from \"../Functions/httpPostForm\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../store/ChatProvider\";\r\n\r\nconst LogIn = (props) => {\r\n  const refEmailLogIn = useRef();\r\n  const refPasswordLogIn = useRef();\r\n\r\n  const history = useHistory();\r\n  const { setSnackBar } = ChatState();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\")) ;\r\n    if (userInfo) history.push(\"/chat\");\r\n  }, [history]);\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault();\r\n    const email = refEmailLogIn.current.value;\r\n    const password = refPasswordLogIn.current.value;\r\n    let payLoad = { email, password };\r\n    try {\r\n      const  data  = await httpPost(payLoad, \"login\");\r\n      if (data.userData) {\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n        history.push(\"/chat\");\r\n      } else {\r\n        console.log(data.error);\r\n        setSnackBar({\r\n          open: true,\r\n          message: data.error.message,\r\n          severity: \"error\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const displayTheme = createTheme({\r\n    palette: {\r\n      mode: props.theme,\r\n    },\r\n  });\r\n\r\n  const MyAvatar = styled(Avatar)({\r\n    height: \"80px\",\r\n    width: \"80px\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <ThemeProvider theme={displayTheme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Box\r\n            sx={{\r\n              marginTop: 8,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <MyAvatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </MyAvatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Log In\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              onSubmit={loginHandler}\r\n              noValidate\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                inputRef={refEmailLogIn}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                inputRef={refPasswordLogIn}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Log In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link variant=\"body2\">Forgot password?</Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <NavLink to=\"/home/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </NavLink>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default LogIn;\r\n","H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\Form.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\ChatPage.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Chat.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Aside.js",["127","128","129","130","131"],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Model.js",["132","133","134","135","136","137"],"import {\r\n  Autocomplete,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CardHeader,\r\n  FilledInput,\r\n  IconButton,\r\n  InputAdornment,\r\n  Modal,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport { Search, Visibility } from \"@mui/icons-material\";\r\nimport Skeleton from \"./Ui/Skeleton\";\r\nimport axios from \"axios\";\r\nconst Model = (props) => {\r\n  const [IsOpen, setIsOpen] = useState(false);\r\n\r\n  const [searchedUsers, setSearchedUsers] = useState([]);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const searchRef = useRef();\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \" 40%\",\r\n    height: \"60%\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : { userData: \"\" };\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${user.userData.token}`,\r\n    },\r\n  };\r\n\r\n  const searchHandler = async () => {\r\n    let searchValue = searchRef.current.value;\r\n    console.log(searchValue);\r\n    setisLoading(true);\r\n    const response = await fetch(\r\n      `http://localhost:8080/api/user?search=${searchValue}`,\r\n      config\r\n    );\r\n    try {\r\n      const users = await response.json();\r\n      setSearchedUsers(users);\r\n      console.log(users);\r\n      setisLoading(false);\r\n    } catch (error) {\r\n      setisLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Button\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          endIcon={<GroupAddIcon />}\r\n        >\r\n          Add Group\r\n        </Button>\r\n        <Modal\r\n          open={IsOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography\r\n              textAlign={\"center\"}\r\n              id=\"modal-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n            >\r\n              Text in a modal\r\n            </Typography>\r\n\r\n            <FilledInput\r\n              sx={{ width: \"100% !important\", margin: \"auto !important\" }}\r\n              id=\"filled-adornment-password\"\r\n              type=\"text\"\r\n              inputRef={searchRef}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={searchHandler}\r\n                    aria-label=\"toggle password visibility\"\r\n                    edge=\"end\"\r\n                  >\r\n                    <Search />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            <Box sx={{ height: \"70%\", overflowY: \"scroll\" }}>\r\n              {searchedUsers.map((user) => {\r\n                return (\r\n                  <Skeleton\r\n                    name={user.name}\r\n                    email={user.email}\r\n                    pic={user.pic}\r\n                    isLoading={isLoading}\r\n                   id={user._id}\r\n                  />\r\n                );\r\n              })}\r\n              {isLoading && (\r\n                <div>\r\n                  <Skeleton isLoading={true} />\r\n                  <Skeleton isLoading={true} />\r\n                  <Skeleton isLoading={true} />\r\n                </div>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Model;\r\n\r\n/*\r\n\r\n     <Autocomplete\r\n              sx={{\r\n                display: \"block\",\r\n                width: \"80% !important\",\r\n                margin: \"auto\",\r\n                position: \"absolute\",\r\n              }}\r\n              id=\"combo-box-demo\"\r\n              options={chats}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n\r\n\r\n*/\r\n","H:\\React projects\\21-full stack chat app\\react project\\src\\data\\data.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\store\\ChatProvider.js",["138"],"import { createContext, useCallback, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [statusCode, setStatusCode] = useState();\r\n  const [snackBar, setSnackBar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [allUsers, setAllUsers] = useState();\r\n  const [myChats, setMyChats] = useState([]);\r\n\r\n  const history = useHistory();\r\n  let user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  if (!user) history.push(\"/\");\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        allUsers,\r\n        setAllUsers,\r\n        statusCode,\r\n        setStatusCode,\r\n        snackBar,\r\n        setSnackBar,\r\n        myChats,\r\n         setMyChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Ui\\Skeleton.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\index.js",[],["139","140"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\App.js",["141","142","143","144"],"import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Box,\n\n  styled,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Form from \"./pages/Form\";\nimport MainPage from \"./pages/MainPage\";\nimport Profile from \"./pages/Profile\";\n\nfunction App() {\n\n\n  const ThemeTag = styled(\"div\")({\n    position: \"fixed\",\n    top: \"3%\",\n    left: \"3%\",\n  });\n\n  const MyBox = styled(Box)({\n\n  });\n\n\n  return (\n\n      <MyBox bgcolor=\"background.default\" color={\"text.primary\"}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/home/login\" />\n          </Route>\n          <Route path=\"/home/login\" exact>\n            <Form  signUp={false} />\n          </Route>\n          <Route path=\"/home/signup\" exact>\n            <Form signUp={true} />\n          </Route>\n\n          <Route path=\"/main\">\n            <MainPage  />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile  />\n          </Route>\n        </Switch>\n        <ThemeTag>\n    \n        </ThemeTag>\n      </MyBox>\n  );\n}\n\nexport default App;\n","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Form.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\MainPage.js",["145","146","147","148"],"import { useEffect, useState } from \"react\";\r\n\r\nconst ChatPage = (props) => {\r\n  const [SearchedValue, setSearchedValue] = useState(\"\");\r\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : { userData: \"\" };\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${user.userData.token}`,\r\n    },\r\n  };\r\n\r\n  const searchHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setSearchedValue(`search=${event.target.value}`);\r\n  };\r\n  const ratingHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setSearchedValue(`rate=${event.target.value}`);\r\n  };\r\n\r\n  const categoryHandler = (event) => {\r\n    setSearchedValue(`category=${event.target.value}`);\r\n    console.log(event.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchHandler = async () => {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/movie?${SearchedValue}`,\r\n        config\r\n      );\r\n      try {\r\n        const users = await response.json();\r\n\r\n        // setSearchedUsers(users);\r\n        console.log(users);\r\n        //    setisLoading(false);\r\n      } catch (error) {\r\n        //   setisLoading(false);\r\n      }\r\n    };\r\n    searchHandler();\r\n  }, [SearchedValue]);\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div class=\"row\">\r\n        <div>\r\n          <a href=\"/profile\" class=\" btn-danger  btn\">\r\n            my profile\r\n          </a>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <h2> filters</h2>\r\n\r\n          <div class=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"write movie title\"\r\n              onChange={searchHandler}\r\n            />\r\n            <button\r\n              class=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              id=\"button-addon2\"\r\n            >\r\n              search\r\n            </button>\r\n          </div>\r\n\r\n          <form class=\"radio\" onChange={ratingHandler}>\r\n            <div class=\"form-check \">\r\n              <h4> Rating</h4>\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                value=\"\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                without Rating\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check radio\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                value=\"1\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                1{\" \"}\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check radio\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                value=\"2\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                2\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check radio\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                value=\"3\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                3\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check radio\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                value=\"4\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                4\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check radio\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                value=\"5\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                5\r\n              </label>\r\n            </div>\r\n          </form>\r\n\r\n          <form onChange={categoryHandler}>\r\n            <ul class=\"list-group\">\r\n            <h2>category</h2>\r\n\r\n            <select\r\n                multiple\r\n              >\r\n                <option className=\"list-group-item\" value=\"happy \">One</option>\r\n                <option className=\"list-group-item\" value=\"2\">Two</option>\r\n                <option className=\"list-group-item\" value=\"3\">Three</option>\r\n                <option className=\"list-group-item\" value=\"3\">Three</option>\r\n                <option className=\"list-group-item\" value=\"3\">Three</option>\r\n                <option className=\"list-group-item\" value=\"3\">Three</option>\r\n                <option className=\"list-group-item\" value=\"3\">Three</option>\r\n                <option className=\"list-group-item\" value=\"3\">Three</option>\r\n\r\n              </select>\r\n       \r\n            </ul>\r\n          </form>\r\n        </div>\r\n\r\n        <div class=\"col-md-9 row\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <div> rating : 5 </div>\r\n                <div> category : action </div>\r\n                <div> created by : ahmed</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChatPage;\r\n","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\LogIn.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\SignUP.js",["149","150","151","152","153","154"],"import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n\r\n\r\n\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { CircularProgress, styled } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport httpPost from \"../Functions/httpPostForm\";\r\nimport { ChatState } from \"../store/ChatProvider\";\r\n\r\nconst SignUP = (props) => {\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUploadPicture, setUploadPicture] = useState(false);\r\n  const [value, setValue] = useState(\"\")\r\n\r\n  const [pic, setPic] = useState(null);\r\n  const refEmailSignUp = useRef();\r\n  const passwordSignUp = useRef();\r\n  const nameSignup = useRef();\r\n\r\n  const upLoadPhoto = (pics) => {\r\n    setUploadPicture(true);\r\n    if (pics === undefined) {\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"dgrbwggrg\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dgrbwggrg/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setUploadPicture(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setUploadPicture(false);\r\n        });\r\n    } else {\r\n      setUploadPicture(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const signUpHandler = async (event) => {\r\n    event.preventDefault();\r\n    const email = refEmailSignUp.current.value;\r\n    const password = passwordSignUp.current.value;\r\n    const name = nameSignup.current.value;\r\n    let payLoad = { name, email, password, pic };\r\n    console.log();\r\n    if (\r\n      email.trim().length <= 0 ||\r\n      password.trim().length <= 0 ||\r\n      name.trim().length <= 0\r\n    ) {\r\n \r\n\r\n      return;\r\n    }\r\n    if (!pic) {\r\n      payLoad = { name, email, password };\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const data = await httpPost(payLoad, \"signup\");\r\n    if (data.userData) {\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      history.push(\"/main\")\r\n    } else {\r\n      console.log(data.error);\r\n    \r\n    }\r\n  };\r\n\r\n  const MyAvatar = styled(Avatar)({\r\n    height: \"80px\",\r\n    width: \"80px\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n  });\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: props.theme,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <MyAvatar src={pic} sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            {isUploadPicture ? <CircularProgress /> : <LockOutlinedIcon />}\r\n          </MyAvatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={signUpHandler} sx={{ mt: 1 }}>\r\n            <TextField\r\n              inputRef={nameSignup}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"text\"\r\n              label=\"Your Name\"\r\n              name=\"text\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n\r\n            <TextField\r\n              inputRef={refEmailSignUp}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"email\"\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n            />\r\n\r\n            <TextField\r\n              inputRef={passwordSignUp}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              pattern=\".{8,}\"\r\n              title=\"8 characters minimum\"\r\n              inputProps={{\r\n                pattern: \".{8,}\",\r\n                title: \"8 characters minimum\",\r\n              }}\r\n              onInvalid={() => {\r\n                console.log(\"hi\");\r\n              }}\r\n              autoComplete=\"current-password\"\r\n            />\r\n\r\n\r\n            <Button variant=\"contained\" component=\"label\">\r\n              Upload File\r\n              <input\r\n                type=\"file\"\r\n                hidden\r\n                accept=\"image/*\"\r\n                onChange={(e) => upLoadPhoto(e.target.files[0])}\r\n              />\r\n            </Button>\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              {isLoading ? <CircularProgress /> : \"Sign Up\"}\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n        \r\n              </Grid>\r\n              <Grid>\r\n                <NavLink color={\"text.primary\"} to=\"/home/login\">\r\n                  Already have an account? Log In\r\n                </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default SignUP;\r\n","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\Functions\\httpPostForm.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\store\\ChatProvider.js",["155"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Profile.js",["156","157","158","159","160","161"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport QuoteForm from \"../components/post/QuoteForm\";\r\nconst Profile = (props) => {\r\n\r\n\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : { userData: \"\" };\r\nconst config = {\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    Authorization: `Bearer ${user.userData.token}`,\r\n  },\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    const searchHandler = async () => {\r\n      \r\n  const response = await fetch(\r\n    'http://localhost:8080/api/user/profile',\r\n    config\r\n  );\r\n  try {\r\n    const users = await response.json();\r\n  \r\n    // setSearchedUsers(users);\r\n    console.log(users);\r\n  }\r\n  catch(e){\r\n    console.log(e)\r\n  }\r\n    };\r\n    searchHandler();\r\n  }, []);\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div class=\"row\">\r\n        <a href=\"/main\" class=\"link-dange\">\r\n          back to main\r\n        </a>\r\n          <div>\r\n            <QuoteForm/>\r\n          </div>\r\n   \r\n\r\n        <div class=\"col-md-3\">\r\n          <ul class=\"list-group\">\r\n            <h4 class=\"list-group-item active\"> my categories</h4>\r\n            <li class=\"list-group-item\">An item</li>\r\n            <li class=\"list-group-item\">A second item</li>\r\n            <li class=\"list-group-item\">A third item</li>\r\n            <li class=\"list-group-item\">A fourth item</li>\r\n            <li class=\"list-group-item\">And a fifth one</li>\r\n          </ul>\r\n          <div class=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Recipient's username\"\r\n            />\r\n            <button\r\n              class=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              id=\"button-addon2\"\r\n            >\r\n              {\" \"}\r\n              + add Category{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-9 row\">\r\n          <h2>my categories</h2>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <div> rating : 5 </div>\r\n                <div> category : action </div>\r\n                <br />\r\n                <button type=\"button\" class=\"btn btn-primary\">\r\n                  Edit\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-danger\">\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-4\">\r\n            <div class=\"card\">\r\n              <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Card title</h5>\r\n                <p class=\"card-text\">\r\n                  Some quick example text to build on the card title and make up\r\n                  the bulk of the card's content.\r\n                </p>\r\n                <a href=\"#\" class=\"btn btn-primary\">\r\n                  Go somewhere\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\post\\QuoteForm.js",["162"],"import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Card from \"../Ui/Card\";\nimport LoadingSpinner from \"../Ui/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const title = useRef();\n  const description = useRef();\n  const rate = useRef();\n  const category = useRef();\n  const [file, setFile] = useState();\n  const [formShow, setFormShow] = useState(false);\n\n  // const send = event => {\n\n  //   // Axios.post(\"https://httpbin.org/anything\", data)\n  //   //   .then(res => console.log(res))\n  //   //   .catch(err => console.log(err));\n  // };\n\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"))\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\n    : { userData: \"\" };\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${user.userData.token}`,\n    },\n  };\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    if (!formShow) {\n      setFormShow(true);\n    } else {\n      event.preventDefault();\n      const enteredTitle = title.current.value;\n      const enteredDescription = description.current.value;\n      const enteredCategory = category.current.value;\n      const enteredRate = rate.current.value;\n      const inputData = new FormData();\n      inputData.append(\"title\", enteredTitle);\n      inputData.append(\"description\", enteredDescription);\n      inputData.append(\"rate\", enteredRate);\n      inputData.append(\"movieCategoryName\", enteredCategory);\n\n      inputData.append(\"image\", file);\n\n      const searchHandler = async () => {\n        try {\n          const { data } = await axios.post(\n            \"http://localhost:8080/api/movie/new-move\",\n          {title:enteredTitle\n\n            },\n            config\n          );\n          console.log(data)\n\n          return { userData: data };\n        } catch (error) {\n          console.log(error)\n          return { error: error.response.data };\n        }\n      };\n\n      searchHandler();\n    }\n  }\n\n  const clickHandler = () => {\n    setFormShow(false);\n  };\n  return (\n    <div>\n      {/* <Prompt /> */}\n      <Card>\n        <form className={classes.form}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          {formShow && (\n            <div>\n              <div className={classes.control}>\n                <label htmlFor=\"author\">title</label>\n                <input type=\"text\" id=\"author\" ref={title} />\n              </div>\n              <div className={classes.control}>\n                <label htmlFor=\"author\">category</label>\n                <input type=\"text\" id=\"author\" ref={category} />\n              </div>\n\n              <div className={classes.control}>\n                <label htmlFor=\"author\">rate</label>\n                <input type=\"number\" min=\"1\" max=\"5\" step=\"1\" ref={rate} />{\" \"}\n              </div>\n\n              <div>\n                <label for=\"formFileLg\" class=\"form-label\">\n                  select image\n                </label>\n                <input\n                  class=\"form-control \"\n                  id=\"formFileLg\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={(event) => {\n                    const file = event.target.files[0];\n                    setFile(file);\n                  }}\n                />\n              </div>\n\n              <div className={classes.control}>\n                <label htmlFor=\"text\">description</label>\n                <textarea id=\"text\" rows=\"3\" ref={description}></textarea>\n              </div>\n              <div className={classes.actions}>\n                <button onClick={clickHandler} className=\"btn btn-danger\">\n                  close\n                </button>\n              </div>\n            </div>\n          )}\n          <div class=\"w-100 text-center\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              onClick={submitFormHandler}\n            >\n              Post <i class=\"bi bi-plus-circle\"></i>\n            </button>{\" \"}\n          </div>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default QuoteForm;\n","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\Card.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\LoadingSpinner.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":1,"column":39,"nodeType":"169","messageId":"170","endLine":1,"endColumn":47},{"ruleId":"167","severity":1,"message":"172","line":4,"column":3,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"167","severity":1,"message":"173","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":16},{"ruleId":"167","severity":1,"message":"174","line":25,"column":11,"nodeType":"169","messageId":"170","endLine":25,"endColumn":18},{"ruleId":"167","severity":1,"message":"175","line":25,"column":20,"nodeType":"169","messageId":"170","endLine":25,"endColumn":30},{"ruleId":"167","severity":1,"message":"176","line":26,"column":9,"nodeType":"169","messageId":"170","endLine":26,"endColumn":14},{"ruleId":"167","severity":1,"message":"177","line":2,"column":3,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"178","line":3,"column":3,"nodeType":"169","messageId":"170","endLine":3,"endColumn":9},{"ruleId":"167","severity":1,"message":"179","line":6,"column":3,"nodeType":"169","messageId":"170","endLine":6,"endColumn":13},{"ruleId":"167","severity":1,"message":"180","line":11,"column":3,"nodeType":"169","messageId":"170","endLine":11,"endColumn":12},{"ruleId":"167","severity":1,"message":"181","line":16,"column":18,"nodeType":"169","messageId":"170","endLine":16,"endColumn":28},{"ruleId":"167","severity":1,"message":"182","line":18,"column":8,"nodeType":"169","messageId":"170","endLine":18,"endColumn":13},{"ruleId":"167","severity":1,"message":"183","line":1,"column":25,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"163","replacedBy":"184"},{"ruleId":"165","replacedBy":"185"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"186","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":21},{"ruleId":"167","severity":1,"message":"187","line":11,"column":23,"nodeType":"169","messageId":"170","endLine":11,"endColumn":36},{"ruleId":"188","severity":1,"message":"189","line":46,"column":6,"nodeType":"190","endLine":46,"endColumn":21,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":198,"column":17,"nodeType":"194","endLine":198,"endColumn":53},{"ruleId":"192","severity":1,"message":"193","line":214,"column":17,"nodeType":"194","endLine":214,"endColumn":53},{"ruleId":"192","severity":1,"message":"193","line":230,"column":17,"nodeType":"194","endLine":230,"endColumn":53},{"ruleId":"167","severity":1,"message":"195","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":20},{"ruleId":"167","severity":1,"message":"196","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":30},{"ruleId":"167","severity":1,"message":"197","line":13,"column":8,"nodeType":"169","messageId":"170","endLine":13,"endColumn":12},{"ruleId":"167","severity":1,"message":"198","line":23,"column":10,"nodeType":"169","messageId":"170","endLine":23,"endColumn":19},{"ruleId":"167","severity":1,"message":"199","line":29,"column":10,"nodeType":"169","messageId":"170","endLine":29,"endColumn":15},{"ruleId":"167","severity":1,"message":"200","line":29,"column":17,"nodeType":"169","messageId":"170","endLine":29,"endColumn":25},{"ruleId":"167","severity":1,"message":"183","line":1,"column":25,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"201","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":18},{"ruleId":"167","severity":1,"message":"171","line":1,"column":31,"nodeType":"169","messageId":"170","endLine":1,"endColumn":39},{"ruleId":"188","severity":1,"message":"189","line":36,"column":6,"nodeType":"190","endLine":36,"endColumn":8,"suggestions":"202"},{"ruleId":"192","severity":1,"message":"193","line":110,"column":17,"nodeType":"194","endLine":110,"endColumn":53},{"ruleId":"192","severity":1,"message":"193","line":126,"column":17,"nodeType":"194","endLine":126,"endColumn":53},{"ruleId":"192","severity":1,"message":"193","line":142,"column":17,"nodeType":"194","endLine":142,"endColumn":53},{"ruleId":"167","severity":1,"message":"203","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":16},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'SendIcon' is defined but never used.","'myChats' is assigned a value but never used.","'setMyChats' is assigned a value but never used.","'chats' is assigned a value but never used.","'Autocomplete' is defined but never used.","'Avatar' is defined but never used.","'CardHeader' is defined but never used.","'TextField' is defined but never used.","'Visibility' is defined but never used.","'axios' is defined but never used.","'useCallback' is defined but never used.",["204"],["205"],"'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["206"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DatePicker' is defined but never used.","'LocalizationProvider' is defined but never used.","'Link' is defined but never used.","'ChatState' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Fragment' is defined but never used.",["207"],"'Prompt' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [SearchedValue, config]",{"range":"212","text":"213"},"Update the dependencies array to be: [config]",{"range":"214","text":"215"},[1295,1310],"[SearchedValue, config]",[782,784],"[config]"]